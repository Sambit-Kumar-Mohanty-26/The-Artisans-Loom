rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /products/{productId} {
      allow read: if true;
      allow update: if request.auth != null && request.auth.uid == resource.data.artisanId;
      allow create, delete: if false;
    }

    match /orders/{orderId} {
      allow read: if request.auth.uid == resource.data.userId;
      allow create, update, delete: if false;
    }

    match /stories/{storyId} {
      allow read: if true;
      allow write: if false;
    }

    match /forumCategories/{categoryId} {
      // Allow any authenticated user to read the list of categories
      allow read: if request.auth != null;
      allow write: if false; // Categories are managed by the seed script
    }

    match /forumPosts/{postId} {
      // Allow authenticated ARTISANS to read and create posts
      allow read, create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artisan';
      
      // Only allow the original author to update or delete their own post
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;

      // Rules for the 'replies' subcollection within a post
      match /replies/{replyId} {
        allow read, create: if request.auth != null && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'artisan';
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      }
    }
    // ------------------------------------

    match /users/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
      
      match /wishlist/{productId} {
        allow read, create, delete: if request.auth.uid == userId;
        allow update: if false;
      }
      match /reviews/{reviewId} {
        allow read: if true;
        allow write: if false;
      }
      match /conversations/{conversationId} {
        allow create, read: if request.auth.uid == userId;
        allow update, delete: if false;
      }
    }

    match /auctionPieces/{auctionPieceId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.artisanId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.artisanId;

      match /bids/{bidId} {
        allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
        allow read, update, delete: if false;
      }
    }
  }
}